{"version":3,"sources":["webpack:///./WebApp async","webpack:///./WebApp/app/custom-form-list/custom-form-list.component.ts","webpack:///./WebApp/app/custom-form-list/custom-form-list.service.ts","webpack:///./WebApp/app/custom-form/custom-form.component.ts","webpack:///./WebApp/app/edit-registered-form/edit-registered-form.component.ts","webpack:///./WebApp/app/edit-registered-form/edit-registered-form.service.ts","webpack:///./WebApp/app/registered-form/registered-form.component.ts","webpack:///./WebApp/main.ts","webpack:///./WebApp/app/app-routing.module.ts","webpack:///./WebApp/app/app.component.ts","webpack:///./WebApp/app/app.module.ts","webpack:///./WebApp/app/menu-bar/menu-bar.component.ts","webpack:///./WebApp/environments/environment.ts","webpack:///./WebApp/app/app.component.css","webpack:///./WebApp/app/custom-form-list/custom-form-list.component.css","webpack:///./WebApp/app/custom-form/custom-form.component.css","webpack:///./WebApp/app/app.component.html","webpack:///./WebApp/app/custom-form-list/custom-form-list.component.html","webpack:///./WebApp/app/custom-form/custom-form.component.html","webpack:///./WebApp/app/edit-registered-form/edit-registered-form.component.html","webpack:///./WebApp/app/menu-bar/menu-bar.component.html","webpack:///./WebApp/app/registered-form/registered-form.component.html","webpack:///./WebApp/app/custom-form/customform.service.ts","webpack:///./WebApp/app/registered-form/registered-form.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 100;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp async\n// module id = 100\n// module chunks = 1","import { ChangeDetectionStrategy,Component, OnInit } from '@angular/core';\nimport { Params, RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\nimport {CustomFormListService} from './custom-form-list.service';\nimport {MdListModule} from '@angular/material';\n\n@Component({\n  selector: 'custom-form-list',\n  templateUrl: './custom-form-list.component.html',\n  styleUrls: ['./custom-form-list.component.css'],\n  providers:[CustomFormListService]\n})\nexport class CustomFormListComponent implements OnInit {\n\n\tconstructor(private customFormListService:CustomFormListService,\n  \tprivate router: Router,\n  \tprivate route: ActivatedRoute){}\n\n\tresultRegisteredForms;\n  dataInAPage:number;\n  totalPages:number;\n  totalData:number;\n  page;\n  resultant;\n\tngOnInit() {\n  \tthis.getRegisteredForms();\n\n  }\n\n  getRegisteredForms(){\n    this.dataInAPage =10;\n    this.page=1;\n  \tthis.customFormListService.getRegisteredForms().subscribe((registeredForms)=>{\n  \t\tthis.resultRegisteredForms=registeredForms;\n      this.resultant=this.resultRegisteredForms;\n      this.resultRegisteredForms=this.resultRegisteredForms.slice(0,this.dataInAPage);\n      this.totalData =registeredForms.length;\n      console.log('data available',this.totalData);\n      this.totalPages =registeredForms.length/this.dataInAPage;\n      this.totalPages=Math.round(this.totalPages);\n  \t});\n  }\n\n   onScroll(){\n     const scrolledValue = this.dataInAPage;\n     this.dataInAPage += 10;\n     this.page = this.page +1;\n     if(this.page<=this.totalPages){\n     this.resultRegisteredForms=this.resultant.slice(0,this.dataInAPage);\n   }else {\n       this.resultRegisteredForms = this.resultant.slice(0,this.totalData);\n     }\n  }\n\n  redirect(email: string) {\n    this.router.navigate(['registeredform/'+ email]);\n    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/custom-form-list/custom-form-list.component.ts","import { Injectable } from '@angular/core';\nimport {Http, Response, RequestOptions, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\n//import { MdSnackBar } from '@angular/material';\n\n@Injectable()\nexport class CustomFormListService {\n\tconstructor(private http: Http) { }\n\n\tgetRegisteredForms(){\n\t\treturn this.http.get('api/v1/customform/')\n\t\t.map(response => response.json());\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/custom-form-list/custom-form-list.service.ts","import { Component, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl} from '@angular/forms';\nimport { Params, RouterModule, Routes, Router, ActivatedRoute } from '@angular/router'\nimport {CustomformService} from './customform.service';\n\n@Component({\n  selector: 'form-custom-form',\n  templateUrl: './custom-form.component.html',\n  styleUrls: ['./custom-form.component.css'],\n  providers:[CustomformService]\n})\nexport class CustomFormComponent implements OnInit {\n   \n   \n\n  constructor(private fb: FormBuilder,\n    private dialog: MdDialog,\n  \tprivate customformService:CustomformService,\n  \tprivate router: Router,\n  \tprivate route: ActivatedRoute){\n  \tthis.createForm();\n  }\n  dateModel:String;\n   customForm : FormGroup;\n  resultTemplateData =[];\n  resulTemplateStateData =[];\n    \n  createForm(){\n  \tthis.customForm=this.fb.group({\n  \t\temail:['', [Validators.required,Validators.pattern('[a-z0-9.@_-]{14,40}')]],\n      username:['', [Validators.required,Validators.pattern('[A-Za-z.-]{5,25}')]],\n      firstname:['', [Validators.required,Validators.pattern('[A-Za-z]{4,20}')]],\n      lastname:['', [Validators.required,Validators.pattern('[A-Za-z]{1,10}')]],\n      dob:[null, [Validators.required]],\n      addressline1:['', [Validators.required]],\n      addressline2:['', [Validators.required]],\n      state:['', [Validators.required]],\n      city:['', [Validators.required,Validators.pattern('[A-Za-z.-]{5,25}')]],\n      about:['', [Validators.required,Validators.pattern('[A-Za-z0-9.@_/,><={( )!$%^&*`]{30,500}')]],\n      pincode:['', [Validators.required,Validators.pattern('[0-9]{6,6}')]],\n      termscondition: ['', Validators.required],\n  \t});\n  }\n \n\n  ngOnInit() {\n  \tthis.getTemplateData();\n  }\n   onsubmit(userdata: any) {\n    const newFormObj = userdata.value;\n\n    let  dobirth=newFormObj.dob;\n    let birth= String(this.dateModel).substring(0,15);\n    // get formControlName value as seperate from fromGroup\n    console.log(newFormObj);\n    const email = newFormObj.email;\n    const username = newFormObj.username;\n    const firstname = newFormObj.firstname;\n    const lastname = newFormObj.lastname;\n    const dob = birth;\n    const state = newFormObj.state['state'];\n    const city = newFormObj.city;\n    const addressline1 = newFormObj.addressline1;\n    const addressline2 = newFormObj.addressline2;\n    const pincode = newFormObj.pincode;\n    const about = newFormObj.about;\n    const newFormData = {email,username,firstname,lastname,state,city,dob,addressline1,addressline2,pincode,about};\n\n    this.customformService.submitFormData(newFormData).subscribe((data) => {\n      if(data.status === 200)\n      {\n        this.dialog.open(SucessDialog);\n      }\n      });\n  }\n  getTemplateData(){\n  \tthis.customformService.getTemplateData().subscribe((tempateData)=>{\n  \t\tthis.resultTemplateData =tempateData;\n  \t});\n  }\n  backToHome(){\n    this.router.navigate(['/customform/']);\n  }\n}\n\n@Component({\n  selector: 'sucsess-dialog',\n  template: `<p>Form Submitted Sucessfully...!!!!</p>`,\n})\nexport class SucessDialog {\n  constructor(){}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/custom-form/custom-form.component.ts","import { Component, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl} from '@angular/forms';\nimport { Params, RouterModule, Routes, Router, ActivatedRoute } from '@angular/router'\nimport {RegisteredFormService} from \"../registered-form/registered-form.service\";\nimport {CustomformService} from '../custom-form/customform.service';\nimport {EditFormService} from './edit-registered-form.service';\n\n@Component({\n\tselector: 'edit-registered-form',\n  templateUrl: './edit-registered-form.component.html',\n  providers:[RegisteredFormService],\n})\n\nexport class EditRegisteredFormComponent{\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate dialog: MdDialog,\n  \tprivate customformService:CustomformService,\n\t\tprivate registeredFormService:RegisteredFormService,\n    private editFormService:EditFormService,\n\t\tprivate router: Router,\n  \tprivate route: ActivatedRoute\n  \t){this.editForm();}\n\tcustomForm : FormGroup;\n\tresultRegisteredForm;\n\tresultTemplateData =[];\n  resulTemplateStateData =[];\n  email;\n  username;\n\tdateModel;\n\tngOnInit() {\n\t\tthis.email=this.route.snapshot.params['email'];\n\t\tthis.getRegisteredForm(this.route.snapshot.params['email']);\n\t}\n\tgetRegisteredForm(email){\n  \tthis.registeredFormService.getRegisteredForm(email).subscribe((registeredForm)=>{\n  \t\tthis.resultRegisteredForm=registeredForm;\n  \t\tthis.getTemplateData();\n  \t});\n  }\n\neditForm(){\n  this.customForm=this.fb.group({\n      username:['', [Validators.required,Validators.pattern('[A-Za-z.-]{5,25}')]],\n      firstname:['', [Validators.required,Validators.pattern('[A-Za-z]{4,20}')]],\n      lastname:['', [Validators.required,Validators.pattern('[A-Za-z]{1,10}')]],\n      addressline1:['', [Validators.required]],\n      addressline2:['', [Validators.required]],\n      state:['', [Validators.required]],\n      city:['', [Validators.required,Validators.pattern('[A-Za-z.-]{3,25}')]],\n      about:['', [Validators.required,Validators.pattern('[A-Za-z0-9.@_/,><={( )!$%^&*`]{30,500}')]],\n      pincode:['', [Validators.required,Validators.pattern('[0-9]{6,6}')]],\n  });\n  }\n\n\n  onsubmit(userdata: any) {\n    const newFormObj = userdata.value;\n    console.log('date of birth from database',this.resultRegisteredForm['dob'])\n    // get formControlName value as seperate from fromGroup\n    console.log(newFormObj);\n    const email = this.email;\n    const username = newFormObj.username;\n    const firstname = newFormObj.firstname;\n    const lastname = newFormObj.lastname;\n    const state = newFormObj.state;\n    const city = newFormObj.city;\n    const addressline1 = newFormObj.addressline1;\n    const addressline2 = newFormObj.addressline2;\n    const pincode = newFormObj.pincode;\n    const about = newFormObj.about;\n    const newFormData = {email,username,firstname,lastname,city,state,addressline1,addressline2,pincode,about};\n\n    this.editFormService.updateFormData(newFormData).subscribe((data) => {\n      if(data.status === 200)\n      {\n        this.dialog.open(UpdateDialog);\n      }\n      });\n  }\n  getTemplateData(){\n  \tthis.customformService.getTemplateData().subscribe((tempateData)=>{\n  \t\tthis.resultTemplateData =tempateData;\n      this.resulTemplateStateData.push(this.resultTemplateData);\n  \t});\n  }\n  backTo(email:string){\n    this.router.navigate(['registeredform/'+ email]);\n  }\n}\n\n@Component({\n  selector: 'update-dialog',\n  template: `<p>Form updated Sucessfully...!!!!</p>`,\n})\nexport class UpdateDialog {\n  constructor(){}\n}\n\t\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/edit-registered-form/edit-registered-form.component.ts","import { Injectable } from '@angular/core';\nimport {Http, Response, RequestOptions, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { MdSnackBar } from '@angular/material';\n\n@Injectable()\nexport class EditFormService {\n\n  constructor(private http: Http,private snackBar:MdSnackBar) { }\n  data;\n  private handleError(error: any){\n        return Observable.throw(error.json());        \n    }\n\n updateFormData(newFormData) {\n    return this.http.patch('api/v1/customform/', newFormData)\n            .catch(err => {\n                this.snackBar.open('Please try again later..!!!','internal server error', {\n                    duration: 3000\n                });\n                return Observable.throw(err); // observable needs to be returned or exception raised\n            })\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/edit-registered-form/edit-registered-form.service.ts","import {Component, Input, NgModule, OnInit} from '@angular/core';\nimport { Http, Response} from '@angular/http';\nimport { MdDialog, MdDialogRef ,MdButtonModule} from '@angular/material';\nimport { Params, RouterModule, Routes, Router, ActivatedRoute } from '@angular/router'\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {RegisteredFormService} from \"./registered-form.service\";\n\n\n@Component({\n  selector: 'registered-form',\n  templateUrl: './registered-form.component.html',\n  //styleUrls: ['./registered-form.component.css'],\n  providers:[RegisteredFormService]\n})\nexport class RegisteredFormComponent implements OnInit {\n\n\tconstructor(private registeredFormService:RegisteredFormService,\n    private dialog: MdDialog,\n  \tprivate router: Router,\n  \tprivate route: ActivatedRoute){}\n\tresultRegisteredForm;\n\t\n\tngOnInit() {\n\t\tthis.getRegisteredForm(this.route.snapshot.params['email']);\n\t}\n\n\tgetRegisteredForm(email){\n  \tthis.registeredFormService.getRegisteredForm(email).subscribe((registeredForm)=>{\n  \t\tthis.resultRegisteredForm=registeredForm;\n  \t});\n  }\n  onClickEdit(email : string){\n    this.router.navigate(['editregisteredform/'+ email]);\n  }\n  onLiked(email:string){\nthis.registeredFormService.clickthumbs(email).subscribe((data)=>{\n   if(data.status === 200)\n      {\n        this.getRegisteredForm(email);\n      }\n});\n  }\n    onUnliked(email:string){\nthis.registeredFormService.unClickthumbs(email).subscribe((data)=>{\n   if(data.status === 200)\n      {\n        this.getRegisteredForm(email);\n      }\n});\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/registered-form/registered-form.component.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/main.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomFormComponent } from './custom-form/custom-form.component';\nimport {CustomFormListComponent} from './custom-form-list/custom-form-list.component';\nimport {RegisteredFormComponent} from \"./registered-form/registered-form.component\";\nimport {EditRegisteredFormComponent} from \"./edit-registered-form/edit-registered-form.component\";\n\nconst routes: Routes = [\n          {\n          path: '',\n          redirectTo: '/customform',\n          pathMatch: 'full'\n          },\n          {\n              path: 'customform',\n              component: CustomFormComponent\n          },\n          {\n              path: 'customformlist',\n              component: CustomFormListComponent\n          },\n          {\n              path: 'registeredform/:email',\n              component: RegisteredFormComponent\n          },\n          {\n              path: 'editregisteredform/:email',\n              component: EditRegisteredFormComponent\n          },\n          { path: '**', redirectTo: '/customform' }\n\n ];\n @NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/app-routing.module.ts","import { Component, Optional } from '@angular/core';\nimport { OverlayContainer } from '@angular/material';\n\n@Component({\n  selector: 'custom-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport 'hammerjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MdToolbarModule,\n MdIconModule,\n  MdInputModule,\n    MdSelectModule, \n    MdAutocompleteModule,\n    MdDialogModule,\n    MdCheckboxModule, \n    MdCardModule, \n    MdMenuModule,\n    MaterialModule, \n    MdButtonModule,\n    MdDatepickerModule,\n    MdNativeDateModule,\n    MdListModule } from '@angular/material';\nimport { MarkdownModule } from 'angular2-markdown';\n//import { InfiniteScrollModule } from 'angular2-infinite-scroll';\nimport {CustomformService} from './custom-form/customform.service';\nimport { CustomFormComponent ,SucessDialog} from './custom-form/custom-form.component';\nimport {CustomFormListService} from './custom-form-list/custom-form-list.service';\nimport {CustomFormListComponent} from './custom-form-list/custom-form-list.component';\nimport {MenuBar} from './menu-bar/menu-bar.component';\nimport {RegisteredFormComponent} from \"./registered-form/registered-form.component\";\nimport {RegisteredFormService} from \"./registered-form/registered-form.service\";\nimport {EditRegisteredFormComponent,UpdateDialog} from \"./edit-registered-form/edit-registered-form.component\";\nimport {EditFormService} from './edit-registered-form/edit-registered-form.service';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\n\n@NgModule({\n  declarations: [\n  AppComponent,CustomFormComponent,CustomFormListComponent,EditRegisteredFormComponent,SucessDialog,MenuBar,RegisteredFormComponent,UpdateDialog],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule, \n    MarkdownModule,\n    AppRoutingModule,\n    MdCheckboxModule,\n    MdDatepickerModule,\n    MdNativeDateModule,\n    MdButtonModule,\n    MdCardModule,\n    MdMenuModule,\n    MdToolbarModule,\n    MdIconModule,\n    MdInputModule,\n    MdSelectModule,\n    MdInputModule,\n    MdAutocompleteModule,\n    InfiniteScrollModule\n    ],\n    entryComponents: [CustomFormComponent,SucessDialog,EditRegisteredFormComponent,UpdateDialog],\n    providers: [CustomformService,CustomFormListService,RegisteredFormService,EditFormService],\n    bootstrap: [AppComponent],\n  })\nexport class AppModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/app.module.ts","import { Component, OnInit, Optional } from '@angular/core';\n\n@Component({\n  selector: 'menu-bar',\n  templateUrl: './menu-bar.component.html'\n  //styleUrls: ['./menu-bar.component.css']\n})\nexport class MenuBar implements OnInit{\n\tconstructor() {\n  }\nngOnInit() {}\n  routinglabels=[\n  { logo: 'customform', link: 'customform', label: 'Custom Registration Form' },\n  { logo: 'customformlist', link: 'customformlist', label: 'Registrated Forms' }];\n}\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/menu-bar/menu-bar.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/app.component.css\n// module id = 244\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/custom-form-list/custom-form-list.component.css\n// module id = 245\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/custom-form/custom-form.component.css\n// module id = 246\n// module chunks = 1","module.exports = \"<menu-bar></menu-bar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/app.component.html\n// module id = 264\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\" fxLayout fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\">\\n    <md-list>\\n      <div *ngFor=\\\"let form of resultRegisteredForms\\\" (click)=\\\"redirect(form.email)\\\">\\n        <md-list-item>\\n          <md-icon md-list-icon><i class=\\\"material-icons\\\">account_circle</i></md-icon>\\n          <h3 md-line>{{form.username}}</h3>\\n          <h3 md-line>{{form.email}}</h3>\\n        </md-list-item>\\n      </div>\\n    </md-list>\\n</div>\\n<div *ngIf=\\\"totalData > dataInAPage\\\">\\n<button (click)=\\\"onScroll()\\\">load more.....!!!!</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/custom-form-list/custom-form-list.component.html\n// module id = 265\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\" fxLayout fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\" fx-flex-fill>\\n<!--   <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"100\\\" fxLayoutWrap fx-flex-fill> -->\\n    <md-card class=\\\"example-card\\\" >\\n      <md-card-content align=\\\"start center\\\">\\n       <!--  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"100\\\" fxLayoutWrap>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"10\\\"></div> -->\\n          <form class=\\\"container\\\" fxFlex=\\\"80\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxFlexFill [formGroup]=\\\"customForm\\\" (ngSubmit)=\\\"onsubmit(customForm) \\\" align=\\\"start center\\\">\\n            <!-- Email id -->\\n            <md-input-container>\\n              <input type=\\\"email\\\" mdInput placeholder=\\\"Enter Email id\\\" minlength=\\\"14\\\" formControlName=\\\"email\\\">\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                <div *ngIf=\\\"customForm.get('email').hasError('required') && customForm.get('email').touched\\\" class=\\\"errorStyle\\\">\\n                  Email is required\\n                </div>\\n                <div *ngIf=\\\"customForm.get('email').hasError('pattern') && customForm.get('email')\\\" class=\\\"errorStyle\\\">\\n                  Invalid email,please Enter a proper emailid\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n            <!-- Username -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Enter Username\\\" formControlName=\\\"username\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('username').hasError('required') && customForm.get('username').touched\\\" class=\\\"errorStyle\\\">\\n                    Username is required\\n                  </div>\\n                  <div *ngIf=\\\"customForm.get('username').hasError('pattern') && customForm.get('username')\\\" class=\\\"errorStyle\\\">\\n                    Invalid username,length of username should be more than 10 characters\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- Firstname -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Enter Firstname\\\" formControlName=\\\"firstname\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('firstname').hasError('required') && customForm.get('firstname').touched\\\" class=\\\"errorStyle\\\">\\n                    Username is required\\n                  </div>\\n                  <div *ngIf=\\\"customForm.get('firstname').hasError('pattern') && customForm.get('username')\\\" class=\\\"errorStyle\\\">\\n                    Invalid firstname,length of firstname have atleast 4 characters,No special characters allowed\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- Lastname -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Enter Lastname\\\" formControlName=\\\"lastname\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('lastname').hasError('required') && customForm.get('lastname').touched\\\" class=\\\"errorStyle\\\">\\n                    lastname is required\\n                  </div>\\n                  <div *ngIf=\\\"customForm.get('lastname').hasError('pattern') && customForm.get('lastname')\\\" class=\\\"errorStyle\\\">\\n                    Invalid lastname,length of lastname should have atleast 1 characters,No special characters allowed\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- Date Of Birth -->\\n            <div>\\n              <md-input-container>\\n                <input [(ngModel)]=\\\"dateModel\\\" mdInput [mdDatepicker]=\\\"picker\\\" placeholder=\\\"Date of Birth\\\" formControlName=\\\"dob\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('dob').hasError('required') && customForm.get('dob').touched\\\" class=\\\"errorStyle\\\">\\n                    dob is required\\n                  </div>\\n                </md-hint>\\n                <md-datepicker-toggle mdSuffix [for]=\\\"picker\\\"></md-datepicker-toggle>\\n                <md-datepicker touchUi=\\\"true\\\" #picker></md-datepicker>\\n              </md-input-container>\\n            </div>\\n            <!-- Enter DoorNo/Flat & Area -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Enter DoorNo/Flat & Area\\\" formControlName=\\\"addressline1\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('addressline1').hasError('required') && customForm.get('addressline1').touched\\\" class=\\\"errorStyle\\\">\\n                    field is required\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- Landmark -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Enter Landmark\\\" formControlName=\\\"addressline2\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('addressline2').hasError('required') && customForm.get('addressline2').touched\\\" class=\\\"errorStyle\\\">\\n                    Landmark is required\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- Enter city -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Enter city\\\" formControlName=\\\"city\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('city').hasError('required') && customForm.get('city').touched\\\" class=\\\"errorStyle\\\">\\n                    city is required\\n                  </div>\\n                  <div *ngIf=\\\"customForm.get('city').hasError('pattern') && customForm.get('city')\\\" class=\\\"errorStyle\\\">\\n                    Invalid city,please Enter a proper city\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- Select State -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-select placeholder=\\\"Select State\\\" formControlName=\\\"state\\\">\\n                <md-option *ngFor=\\\"let states of resultTemplateData\\\" [value]='states'>\\n                  {{ states.state}}\\n                </md-option>\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('state').hasError('required') && customForm.get('state').touched\\\" class=\\\"errorStyle\\\">\\n                    state is required\\n                  </div>\\n                </md-hint>\\n                <div fxLayoutgap.md=\\\"column\\\">\\n                </div>\\n              </md-select>\\n            </div>\\n            <!-- Pincode -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-input-container>\\n                <input type=\\\"\\\" mdInput placeholder=\\\"Pincode\\\" maxlength=\\\"6\\\" formControlName=\\\"pincode\\\">\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('pincode').hasError('required') && customForm.get('pincode').touched\\\" class=\\\"errorStyle\\\">\\n                    Pincode is required\\n                  </div>\\n                  <div *ngIf=\\\"customForm.get('pincode').hasError('pattern') && customForm.get('pincode')\\\" class=\\\"errorStyle\\\">\\n                    Invalid Pincode,length of Pincode should have 6 number without any special characters\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- about -->\\n            <div fxLayout.xs=\\\"row\\\">\\n              <md-input-container class=\\\"example-full-width\\\">\\n                <textarea mdInput placeholder=\\\"write about youself\\\" formControlName=\\\"about\\\"></textarea>\\n                <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                  <div *ngIf=\\\"customForm.get('about').hasError('about') && customForm.get('about').touched\\\" class=\\\"errorStyle\\\">\\n                    Field is required\\n                  </div>\\n                  <div *ngIf=\\\"customForm.get('about').hasError('pattern') && customForm.get('about')\\\" class=\\\"errorStyle\\\">\\n                    Field should aleast contain 30 character special characters (.@_-)\\n                  </div>\\n                </md-hint>\\n              </md-input-container>\\n            </div>\\n            <!-- termscondition -->\\n            <div fxLayout.md=\\\"column\\\">\\n              <md-checkbox color=\\\"primary\\\" formControlName=\\\"termscondition\\\">I Agreed !!! Terms and Condition</md-checkbox>\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n              <div *ngIf=\\\"customForm.get('termscondition').touched\\\"><div *ngIf=\\\"customForm.get('termscondition').hasError('required')\\\" class=\\\"errorStyle\\\">\\n                  Should Agree term and condtion to submit form\\n                </div></div>\\n              </md-hint>\\n            </div>\\n            <!--button  -->\\n            <div fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"5px\\\">\\n              <!-- <button md-button (click)=\\\"backToHome()\\\">Cancel</button> -->\\n              <button md-raised-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"!customForm.valid\\\">Submit</button>\\n            </div>\\n          </form>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"10\\\"></div>\\n        <!-- </div> -->\\n      </md-card-content>\\n    </md-card>\\n  </div>\\n<!-- </div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/custom-form/custom-form.component.html\n// module id = 266\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\" fxLayout fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\" fx-flex-fill>\\n  <md-card class=\\\"example-card\\\">\\n    <md-card-content align=\\\"start center\\\">\\n      <form class=\\\"container\\\" fxFlex=\\\"80\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxFlexFill [formGroup]=\\\"customForm\\\" (ngSubmit)=\\\"onsubmit(customForm) \\\" align=\\\"start center\\\">\\n        <div *ngFor=\\\"let data of resultRegisteredForm\\\">\\n          <div fxLayout.md=\\\"column\\\">\\n            <md-input-container>\\n              <input type=\\\"email\\\" mdInput placeholder=\\\"Email\\\" minlength=\\\"14\\\" value={{data.email}} disabled>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column\\\">\\n            <md-input-container>\\n              <input type=\\\"text\\\" mdInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" ngModel={{data.username}}>\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                <div *ngIf=\\\"customForm.get('username').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('username').hasError('pattern')\\\">Invalid username,length of username should be more than 10 characters</div>\\n                  <div *ngIf=\\\"customForm.get('username').hasError('required')\\\">username is Required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column\\\">\\n            <md-input-container>\\n              <input type=\\\"text\\\" mdInput placeholder=\\\"Firstname\\\" formControlName=\\\"firstname\\\" ngModel={{data.firstname}}>\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                <div *ngIf=\\\"customForm.get('firstname').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('firstname').hasError('pattern')\\\">Invalid firstname,length of firstname have atleast 4 characters,No special characters allowed</div>\\n                  <div *ngIf=\\\"customForm.get('firstname').hasError('required')\\\">firstname is Required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n            <md-input-container>\\n              <input type=\\\"text\\\" mdInput placeholder=\\\"Lastname\\\" formControlName=\\\"lastname\\\" ngModel={{data.lastname}}>\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                <div *ngIf=\\\"customForm.get('lastname').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('lastname').hasError('pattern')\\\">Invalid lastname,length of lastname have atleast 1 characters,No special characters allowed</div>\\n                  <div *ngIf=\\\"customForm.get('lastname').hasError('required')\\\">lastname is Required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column\\\">\\n            <md-input-container>\\n              <input mdInput placeholder=\\\"Date Of Birth\\\" value={{data.dob}} disabled>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column\\\">\\n            <md-input-container>\\n              <input type=\\\"text\\\" mdInput placeholder=\\\"DoorNo/Flat & Area\\\" formControlName=\\\"addressline1\\\" ngModel={{data.addressline1}}>\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                <div *ngIf=\\\"customForm.get('addressline1').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('addressline1').hasError('required')\\\">\\n                    field is required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column\\\">\\n            <md-input-container>\\n              <input type=\\\"text\\\" mdInput placeholder=\\\"Landmark\\\" formControlName=\\\"addressline2\\\" ngModel={{data.addressline2}}>\\n              <md-hint align=\\\"start\\\" class=\\\"full-width\\\">\\n                <div *ngIf=\\\"customForm.get('addressline2').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('addressline2').hasError('required')\\\">\\n                    Landmark is required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column \\\">\\n            <md-input-container>\\n              <input type=\\\"text \\\" mdInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" ngModel={{data.city}}>\\n              <md-hint align=\\\"start \\\" class=\\\"full-width \\\">\\n                <div *ngIf=\\\"customForm.get('city').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('city').hasError('pattern')\\\">Invalid city,please Enter a proper city</div>\\n                  <div *ngIf=\\\"customForm.get('city').hasError('required')\\\">city is Required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column \\\">\\n            <md-select placeholder=\\\"State\\\" formControlName=\\\"state\\\" ngModel={{data.state}}>\\n              <md-option *ngFor=\\\"let states of resultTemplateData\\\" [value]='states.state'>\\n                {{states.state}}\\n              </md-option>\\n              <md-hint align=\\\"start \\\" class=\\\"full-width \\\">\\n                <div *ngIf=\\\"customForm.get('state').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get('state').hasError('required')\\\">State is Required\\n                  </div>\\n                </div>\\n              </md-hint>\\n            </md-select>\\n          </div>\\n          <div fxLayout.md=\\\"column \\\">\\n            <md-input-container>\\n              <input type=\\\" \\\" mdInput placeholder=\\\"Pincode \\\" maxlength=\\\"6 \\\" formControlName=\\\"pincode\\\" ngModel={{data.pincode}}>\\n              <md-hint align=\\\"start \\\" class=\\\"full-width \\\">\\n                <div *ngIf=\\\"customForm.get('pincode').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get( 'pincode').hasError( 'pattern')\\\">Invalid Pincode,length of Pincode should have 6 number without any special characters</div>\\n                  <div *ngIf=\\\"customForm.get( 'pincode').hasError( 'required')\\\">PINCODE is Required</div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.xs=\\\"row \\\">\\n            <md-input-container class=\\\"example-full-width \\\">\\n              <textarea mdInput placeholder=\\\"About you \\\" formControlName=\\\"about\\\" ngModel={{data.about}}></textarea>\\n              <md-hint align=\\\"start \\\" class=\\\"full-width \\\">\\n                <div *ngIf=\\\"customForm.get('about').dirty\\\">\\n                  <div *ngIf=\\\"customForm.get( 'about').hasError( 'pattern')\\\">Field should aleast contain 30 character Allowed special characters (.@_-) characters</div>\\n                  <div *ngIf=\\\"customForm.get( 'about').hasError( 'required')\\\">About is Required</div>\\n                </div>\\n              </md-hint>\\n            </md-input-container>\\n          </div>\\n          <div fxLayout.md=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"5px \\\">\\n            <button md-button (click)=\\\"backTo(data.email)\\\">Cancel</button>\\n            <button md-raised-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"!customForm.dirty\\\">Save</button>\\n          </div>\\n        </div>\\n      </form>\\n      <div fxLayout=\\\" column \\\" fxFlex=\\\"10 \\\"></div>\\n    </md-card-content>\\n  </md-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/edit-registered-form/edit-registered-form.component.html\n// module id = 267\n// module chunks = 1","module.exports = \"<div [class.dark]=\\\"isDarkTheme\\\">\\n  <md-sidenav-container fullscreen class=\\\"sidenav-container\\\">\\n    <md-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z2\\\">\\n      <span class=\\\"spacer\\\"></span>\\n      <div class=\\\"mdc-typography--display4\\\">\\n        <button md-button class=\\\"hidden-sm-down nav-button\\\" *ngFor=\\\"let item of routinglabels\\\" [routerLink]=\\\"[item.link]\\\" routerLinkActive=\\\"active\\\">\\n          {{item.label}}\\n        </button>\\n      </div>\\n    </md-toolbar>\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\">\\n      <div fxFlex>\\n        <router-outlet></router-outlet>\\n      </div>\\n      </div>\\n  </md-sidenav-container>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/menu-bar/menu-bar.component.html\n// module id = 268\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\" fxLayout fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\" fxLayoutGap.xs=\\\"0\\\">\\n  <div fxFlex=\\\"50%\\\" *ngFor=\\\"let data of resultRegisteredForm\\\" fx-flex-fill fxLayoutAlign=\\\"center\\\">\\n    <md-card>\\n      <md-card-content>\\n        <md-list>\\n          <md-list-item>\\n            <h3 md-line>{{data.firstname}} Profile</h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>Registered email is : {{data.email}} </h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>Username : {{data.username}} </h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>Users First Name is : {{data.firstname}} </h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>FullName : {{data.firstname}}  {{data.lastname}} </h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>Date Of Birth : {{data.dob}} </h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>Address for Commnunication: {{data.addressline1}} ,{{data.addressline2}} ,{{data.city}},{{data.state}},  {{data.pincode}}</h3>\\n          </md-list-item>\\n          <md-list-item>\\n            <h3 md-line>About me : {{data.about}}</h3>\\n          </md-list-item>\\n        </md-list>\\n        <div>\\n        <button md-raised-button (click)=\\\"onClickEdit(data.email)\\\" color=\\\"primary\\\">Edit</button>\\n            <!-- <button (click)=\\\"onClickEdit(data.email)\\\">Edit</button> -->\\n          <span class=\\\"spacer\\\"></span>\\n            <md-button-toggle-group>\\n              <div *ngIf=(!data.like)>\\n                <md-button-toggle value=\\\"bad\\\" (click)=\\\"onLiked(data.email)\\\">\\n                  <md-icon>thumb_up</md-icon>\\n                </md-button-toggle>\\n              </div>\\n              <div *ngIf=(data.like)>\\n                <md-button-toggle value=\\\"good\\\" (click)=\\\"onUnliked(data.email)\\\" >\\n                  <md-icon color=\\\"primary\\\">thumb_up</md-icon>\\n                </md-button-toggle>\\n              </div>\\n            </md-button-toggle-group>\\n        </div>\\n      </md-card-content>\\n    </md-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WebApp/app/registered-form/registered-form.component.html\n// module id = 269\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport {Http, Response, RequestOptions, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { MdSnackBar } from '@angular/material';\n\n@Injectable()\nexport class CustomformService {\n\n  constructor(private http: Http,private snackBar:MdSnackBar) { }\n  data;\n  private handleError(error: any){\n        return Observable.throw(error.json());        \n    }\n  getTemplateData(){\n  \treturn this.http.get(`api/v1/templates/state`)\n\t\t.map(response => response.json());\n  }\n\n  getTemplateStateData(state:string){\n  \treturn this.http.get('api/v1/templates/'+state+'/city')\n\t\t.map(response => response.json());\n  }\n\n submitFormData(newFormData) {\n   console.log('inside serveice',newFormData);\n// const headers = new Headers();\n//         headers.append('Content-Type', 'application/json');\n    return this.http.post('api/v1/customform', newFormData)\n            .catch(err => {\n                this.snackBar.open('Please try again later..!!!','internal server error', {\n                    duration: 3000\n                });\n                return Observable.throw(err); // observable needs to be returned or exception raised\n            })\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/custom-form/customform.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Response, RequestOptions, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { MdSnackBar } from '@angular/material';\n\n@Injectable()\nexport class RegisteredFormService {\n\tconstructor(private http: Http,private snackBar:MdSnackBar) { }\n\n\tgetRegisteredForm(email){\n\t\treturn this.http.get('api/v1/customform/'+email)\n\t\t.map(response => response.json());\n\t}\n\tclickthumbs(email:string){\n\t\treturn this.http.patch('api/v1/customform/liked/'+email,{})\n\t\t.catch(err => {\n                this.snackBar.open('Please try again later..!!!','internal server error', {\n                    duration: 3000\n                });\n                return Observable.throw(err); // observable needs to be returned or exception raised\n            });\n\t}\n\tunClickthumbs(email:string){\n\t\treturn this.http.patch('api/v1/customform/unliked/'+email,{})\n\t\t.catch(err => {\n                this.snackBar.open('Please try again later..!!!','internal server error', {\n                    duration: 3000\n                });\n                return Observable.throw(err); // observable needs to be returned or exception raised\n            });\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./WebApp/app/registered-form/registered-form.service.ts"],"sourceRoot":""}